name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'SSH connection successful'"

      - name: Verify chamiron directory on remote server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo mkdir -p /home/chamiron && sudo chmod -R 777 /home/chamiron && echo 'Chamiron directory verified'"

      - name: Copy code to chamiron directory on remote server
        run: |
          scp -r . ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/chamiron

      - name: Deploy on remote server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd /home/chamiron
          # Set up virtual environment
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          # Install Nginx, Certbot, and Supervisor
          sudo apt-get update
          sudo apt-get install -y nginx certbot python3-certbot-nginx supervisor
          # Set up Nginx reverse proxy
          sudo bash -c 'cat > /etc/nginx/sites-available/fastapi <<EOF2
          server {
              listen 80;
              server_name 54.221.60.254;
              location / {
                  proxy_pass http://127.0.0.1:8000;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
              }
          }
          EOF2'
          sudo ln -sf /etc/nginx/sites-available/fastapi /etc/nginx/sites-enabled/
          sudo nginx -t && sudo systemctl reload nginx
          # Obtain SSL Certificate with Let's Encrypt
          sudo certbot --nginx --non-interactive --agree-tos -m ochamerion@gmail.com -d 54.221.60.254
          # Restart Nginx with SSL
          sudo systemctl restart nginx
          # Kill any running app
          pkill -f "uvicorn" || true
          # Set up Supervisor for the FastAPI app
          sudo bash -c 'cat > /etc/supervisor/conf.d/fastapi.conf <<EOF2
          [program:fastapi]
          command=/home/chamiron/venv/bin/uvicorn main:app --host 127.0.0.1 --port 8000 --workers 4
          directory=/home/chamiron
          user=${{ secrets.SSH_USER }}
          autostart=true
          autorestart=true
          stderr_logfile=/var/log/fastapi.err.log
          stdout_logfile=/var/log/fastapi.out.log
          EOF2'
          # Reload and start Supervisor
          sudo supervisorctl reread
          sudo supervisorctl update
          sudo supervisorctl start fastapi
          EOF